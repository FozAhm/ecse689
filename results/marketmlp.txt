ECSE 689 Machine Learnng
Data Being Analyzed: bank-additional-full.csv
Number of Rows in Data: 41189
Sample: 1 ,Feautures: [56, 3, 1, 0, 0, 0, 0, 1, 4, 0, 261, 1, 0, 0, 1, 1.1, 93.994, -36.4, 4.857, 5191.0] ,Target: 0
Sample: 2 ,Feautures: [57, 7, 1, 3, 2, 0, 0, 1, 4, 0, 149, 1, 0, 0, 1, 1.1, 93.994, -36.4, 4.857, 5191.0] ,Target: 0
Sample: 3 ,Feautures: [37, 7, 1, 3, 0, 1, 0, 1, 4, 0, 226, 1, 0, 0, 1, 1.1, 93.994, -36.4, 4.857, 5191.0] ,Target: 0
Sample: 4 ,Feautures: [40, 0, 1, 1, 0, 0, 0, 1, 4, 0, 151, 1, 0, 0, 1, 1.1, 93.994, -36.4, 4.857, 5191.0] ,Target: 0
Sample: 5 ,Feautures: [56, 7, 1, 3, 0, 0, 1, 1, 4, 0, 307, 1, 0, 0, 1, 1.1, 93.994, -36.4, 4.857, 5191.0] ,Target: 0
Sample: 6 ,Feautures: [45, 7, 1, 2, 2, 0, 0, 1, 4, 0, 198, 1, 0, 0, 1, 1.1, 93.994, -36.4, 4.857, 5191.0] ,Target: 0
Sample: 7 ,Feautures: [59, 0, 1, 5, 0, 0, 0, 1, 4, 0, 139, 1, 0, 0, 1, 1.1, 93.994, -36.4, 4.857, 5191.0] ,Target: 0
Sample: 8 ,Feautures: [41, 1, 1, 7, 2, 0, 0, 1, 4, 0, 217, 1, 0, 0, 1, 1.1, 93.994, -36.4, 4.857, 5191.0] ,Target: 0
Sample: 9 ,Feautures: [24, 9, 2, 5, 0, 1, 0, 1, 4, 0, 380, 1, 0, 0, 1, 1.1, 93.994, -36.4, 4.857, 5191.0] ,Target: 0
Sample: 10 ,Feautures: [25, 7, 2, 3, 0, 1, 0, 1, 4, 0, 50, 1, 0, 0, 1, 1.1, 93.994, -36.4, 4.857, 5191.0] ,Target: 0
You Choose MLP Neural Networks
Best parameters set found on development set:

{'activation': 'logistic', 'alpha': 1e-05, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'lbfgs'}

Grid scores on development set:

0.887 (+/-0.000) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'sgd'}
0.887 (+/-0.000) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'adam'}
0.904 (+/-0.007) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'sgd'}
0.891 (+/-0.004) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'adam'}
0.900 (+/-0.020) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'sgd'}
0.893 (+/-0.013) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'adam'}
0.887 (+/-0.000) for {'activation': 'logistic', 'alpha': 1e-05, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'logistic', 'alpha': 1e-05, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'sgd'}
0.887 (+/-0.000) for {'activation': 'logistic', 'alpha': 1e-05, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'adam'}
0.907 (+/-0.004) for {'activation': 'logistic', 'alpha': 1e-05, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'logistic', 'alpha': 1e-05, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'sgd'}
0.894 (+/-0.007) for {'activation': 'logistic', 'alpha': 1e-05, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'adam'}
0.903 (+/-0.017) for {'activation': 'logistic', 'alpha': 1e-05, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'logistic', 'alpha': 1e-05, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'sgd'}
0.894 (+/-0.010) for {'activation': 'logistic', 'alpha': 1e-05, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'adam'}
0.887 (+/-0.000) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'sgd'}
0.887 (+/-0.000) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'adam'}
0.901 (+/-0.015) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'sgd'}
0.885 (+/-0.011) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'adam'}
0.905 (+/-0.002) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'sgd'}
0.888 (+/-0.007) for {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'adam'}
0.887 (+/-0.000) for {'activation': 'tanh', 'alpha': 1e-05, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'tanh', 'alpha': 1e-05, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'sgd'}
0.888 (+/-0.004) for {'activation': 'tanh', 'alpha': 1e-05, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'adam'}
0.899 (+/-0.010) for {'activation': 'tanh', 'alpha': 1e-05, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'tanh', 'alpha': 1e-05, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'sgd'}
0.891 (+/-0.005) for {'activation': 'tanh', 'alpha': 1e-05, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'adam'}
0.899 (+/-0.012) for {'activation': 'tanh', 'alpha': 1e-05, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'tanh', 'alpha': 1e-05, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'sgd'}
0.887 (+/-0.002) for {'activation': 'tanh', 'alpha': 1e-05, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'adam'}
0.423 (+/-0.758) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'sgd'}
0.892 (+/-0.013) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'adam'}
0.887 (+/-0.000) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'sgd'}
0.881 (+/-0.080) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'adam'}
0.887 (+/-0.000) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'sgd'}
0.873 (+/-0.112) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'adam'}
0.732 (+/-0.622) for {'activation': 'relu', 'alpha': 1e-05, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'relu', 'alpha': 1e-05, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'sgd'}
0.892 (+/-0.013) for {'activation': 'relu', 'alpha': 1e-05, 'hidden_layer_sizes': (5, 3), 'max_iter': 1000, 'solver': 'adam'}
0.873 (+/-0.054) for {'activation': 'relu', 'alpha': 1e-05, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'relu', 'alpha': 1e-05, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'sgd'}
0.894 (+/-0.017) for {'activation': 'relu', 'alpha': 1e-05, 'hidden_layer_sizes': (100,), 'max_iter': 1000, 'solver': 'adam'}
0.887 (+/-0.000) for {'activation': 'relu', 'alpha': 1e-05, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'lbfgs'}
0.887 (+/-0.000) for {'activation': 'relu', 'alpha': 1e-05, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'sgd'}
0.894 (+/-0.012) for {'activation': 'relu', 'alpha': 1e-05, 'hidden_layer_sizes': (100, 50), 'max_iter': 1000, 'solver': 'adam'}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

              precision    recall  f1-score   support

           0       0.93      0.97      0.95      7319
           1       0.60      0.40      0.48       919

    accuracy                           0.90      8238
   macro avg       0.77      0.69      0.72      8238
weighted avg       0.89      0.90      0.90      8238


--- Total Program Execution Time ---
--- 452.65703868865967 seconds ---
